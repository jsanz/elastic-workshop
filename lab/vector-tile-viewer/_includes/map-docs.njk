---
layout: map.njk
---

<!-- getTransformRequest  -->
<script>
const getTransFormRequest = function (url, resourceType) {
    /* This function enriches the HTTP request to include
    the ES search body, change to a POST request, and include
    the Content-Type and authorization headers */
    if (resourceType == 'Tile' && url.startsWith(ES_HOST)) {
        return {
            url: url,
            method: 'POST',
            headers: { 
                'Content-Type': 'application/json',
                'Authorization': `ApiKey ${ES_APIKEY}`
            },
            type: 'arrayBuffer',
            body: JSON.stringify(ES_SEARCH_BODY)
        }
    }
}

<!-- Rendering counts -->
const intFormatter = new Intl.NumberFormat('en-US',{
  minimumFractionDigits: 0,
  maximumFractionDigits: 0,
});

const getCount = function(features){
    const dataFeatures = features.filter(f => f?.layer?.id == 'data');
    let count;
   
    // Features can be single documents or aggregated hex or grid
    if (! dataFeatures) {
        return;
    } else if (dataFeatures[0]?.properties.hasOwnProperty('_count')){
        count = dataFeatures.reduce((acc, cur) => acc + cur.properties._count, 0);
    } else {
        count = dataFeatures.length ;
    }

    // Fix NYC 311 duplicate data issue
    return count / 2;
}
const counts = function() {
    const features = map.queryRenderedFeatures();
    const countEl = document.getElementById('count');
    const preCount = countEl.textContent;
    
    const count = getCount(features);

    if (!count) return;

    // Render the count
    const formattedCount = intFormatter.format(count);
    if (preCount != formattedCount) {
        countEl.textContent = formattedCount;
    }
};
</script>

{{ content | safe }}
